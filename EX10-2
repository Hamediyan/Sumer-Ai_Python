vec1 = np.array([ -1., 4., -9.])
mat1 = np.array([[ 1., 3., 5.], [7., -9., 2.], [4., 6., 8. ]])
vec2 = (np.pi/4) * vec1
vec2 = np.cos( vec2 )
vec3 = vec1 + 2 * vec2
vec4=vec3*mat1
vec4
mat2=np.transpose(mat1)
mat3=np.linalg.det(mat1)
mat4=np.trace(mat1)
s=np.min(vec1)
min1=np.where(vec1<=s)
#print(min1)
smalmat1=np.min(mat1)
smalmat1
A=np.array([[17, 24, 1, 8, 15],
[23, 5, 7, 14, 16],
[ 4, 6, 13, 20, 22],
[10, 12, 19, 21, 3],
[11, 18, 25, 2, 9]])
sr = np.sum(A,axis=1)
sc = np.sum(A,axis = 0)
sd = np.sum(np.diag(A))
sf = np.sum(np.fliplr(A))
rn=np.random.rand(10,10)
rn
if np.min(np.sum(A,axis=1)) == np.max(np.sum(A,axis=1)) and np.min(np.sum(A,axis=0)) == np.max(np.sum(A,axis=0)) and np.sum(A.diagonal()):
    print('Magic Matrix')
newmatrix=np.linspace(0,50,25)
nm =newmatrix.reshape(5,5)
nm.diagonal()
